{
  "contractName": "Customer",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_username",
          "type": "string"
        },
        {
          "name": "_passwordHash",
          "type": "string"
        }
      ],
      "name": "signup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xac0861c3"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_passwordHash",
          "type": "string"
        }
      ],
      "name": "login",
      "outputs": [
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "username",
              "type": "string"
            },
            {
              "name": "passwordHash",
              "type": "string"
            },
            {
              "name": "ethAddress",
              "type": "address"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3a7d280c"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610985806100206000396000f3fe60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633a7d280c14610051578063ac0861c31461008e575b600080fd5b34801561005d57600080fd5b50610078600480360361007391908101906106b2565b6100b7565b6040516100859190610840565b60405180910390f35b34801561009a57600080fd5b506100b560048036036100b091908101906106f3565b61040b565b005b6100bf610578565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051808280546001816001161561010002031660029004801561015c5780601f1061013a57610100808354040283529182019161015c565b820191906000526020600020905b815481529060010190602001808311610148575b505091505060405180910390208280519060200120141561040557600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060806040519081016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561025b5780601f106102305761010080835404028352916020019161025b565b820191906000526020600020905b81548152906001019060200180831161023e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610406565b5b919050565b610413610578565b83816000018190525082816020018190525081816040018190525033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060056000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104ed9291906105b7565b50602082015181600101908051906020019061050a9291906105b7565b5060408201518160020190805190602001906105279291906105b7565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b608060405190810160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105f857805160ff1916838001178555610626565b82800160010185558215610626579182015b8281111561062557825182559160200191906001019061060a565b5b5090506106339190610637565b5090565b61065991905b8082111561065557600081600090555060010161063d565b5090565b90565b600082601f830112151561066f57600080fd5b813561068261067d8261088f565b610862565b9150808252602083016020830185838301111561069e57600080fd5b6106a98382846108f8565b50505092915050565b6000602082840312156106c457600080fd5b600082013567ffffffffffffffff8111156106de57600080fd5b6106ea8482850161065c565b91505092915050565b60008060006060848603121561070857600080fd5b600084013567ffffffffffffffff81111561072257600080fd5b61072e8682870161065c565b935050602084013567ffffffffffffffff81111561074b57600080fd5b6107578682870161065c565b925050604084013567ffffffffffffffff81111561077457600080fd5b6107808682870161065c565b9150509250925092565b610793816108c6565b82525050565b60006107a4826108bb565b8084526107b8816020860160208601610907565b6107c18161093a565b602085010191505092915050565b600060808301600083015184820360008601526107ec8282610799565b915050602083015184820360208601526108068282610799565b915050604083015184820360408601526108208282610799565b9150506060830151610835606086018261078a565b508091505092915050565b6000602082019050818103600083015261085a81846107cf565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561088557600080fd5b8060405250919050565b600067ffffffffffffffff8211156108a657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b60006108d1826108d8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561092557808201518184015260208101905061090a565b83811115610934576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058209c9e9f5e921ddf2349b0c4500f7bab2f17d17fddcfe44a2349fde16069fea6b36c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633a7d280c14610051578063ac0861c31461008e575b600080fd5b34801561005d57600080fd5b50610078600480360361007391908101906106b2565b6100b7565b6040516100859190610840565b60405180910390f35b34801561009a57600080fd5b506100b560048036036100b091908101906106f3565b61040b565b005b6100bf610578565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201604051808280546001816001161561010002031660029004801561015c5780601f1061013a57610100808354040283529182019161015c565b820191906000526020600020905b815481529060010190602001808311610148575b505091505060405180910390208280519060200120141561040557600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060806040519081016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561025b5780601f106102305761010080835404028352916020019161025b565b820191906000526020600020905b81548152906001019060200180831161023e57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050508152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610406565b5b919050565b610413610578565b83816000018190525082816020018190525081816040018190525033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060056000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906104ed9291906105b7565b50602082015181600101908051906020019061050a9291906105b7565b5060408201518160020190805190602001906105279291906105b7565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b608060405190810160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105f857805160ff1916838001178555610626565b82800160010185558215610626579182015b8281111561062557825182559160200191906001019061060a565b5b5090506106339190610637565b5090565b61065991905b8082111561065557600081600090555060010161063d565b5090565b90565b600082601f830112151561066f57600080fd5b813561068261067d8261088f565b610862565b9150808252602083016020830185838301111561069e57600080fd5b6106a98382846108f8565b50505092915050565b6000602082840312156106c457600080fd5b600082013567ffffffffffffffff8111156106de57600080fd5b6106ea8482850161065c565b91505092915050565b60008060006060848603121561070857600080fd5b600084013567ffffffffffffffff81111561072257600080fd5b61072e8682870161065c565b935050602084013567ffffffffffffffff81111561074b57600080fd5b6107578682870161065c565b925050604084013567ffffffffffffffff81111561077457600080fd5b6107808682870161065c565b9150509250925092565b610793816108c6565b82525050565b60006107a4826108bb565b8084526107b8816020860160208601610907565b6107c18161093a565b602085010191505092915050565b600060808301600083015184820360008601526107ec8282610799565b915050602083015184820360208601526108068282610799565b915050604083015184820360408601526108208282610799565b9150506060830151610835606086018261078a565b508091505092915050565b6000602082019050818103600083015261085a81846107cf565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561088557600080fd5b8060405250919050565b600067ffffffffffffffff8211156108a657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b60006108d1826108d8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561092557808201518184015260208101905061090a565b83811115610934576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058209c9e9f5e921ddf2349b0c4500f7bab2f17d17fddcfe44a2349fde16069fea6b36c6578706572696d656e74616cf50037",
  "sourceMap": "96:912:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;96:912:0;;;;;;;",
  "deployedSourceMap": "96:912:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:263;;8:9:-1;5:2;;;30:1;27;20:12;5:2;742:263:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;408:326;;8:9:-1;5:2;;;30:1;27;20:12;5:2;408:326:0;;;;;;;;;;;;;;;;;;;742:263;807:11;;:::i;:::-;886:5;:17;892:10;886:17;;;;;;;;;;;;;;;:30;;870:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:13;835:31;;;;;;:83;831:157;;;942:5;:17;948:10;942:17;;;;;;;;;;;;;;;935:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;831:157;742:263;;;;:::o;408:326::-;518:19;;:::i;:::-;563:5;548:7;:12;;:20;;;;598:9;579:7;:16;;:28;;;;641:13;618:7;:20;;:36;;;;678:10;665;;:23;;;;;;;;;;;;;;;;;;719:7;699:5;:17;705:10;;;;;;;;;;;699:17;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;408:326;;;;:::o;96:912::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:442:-1:-;;108:3;101:4;93:6;89:17;85:27;78:35;75:2;;;126:1;123;116:12;75:2;163:6;150:20;185:65;200:49;242:6;200:49;;;185:65;;;176:74;;270:6;263:5;256:21;306:4;298:6;294:17;339:4;332:5;328:16;374:3;365:6;360:3;356:16;353:25;350:2;;;391:1;388;381:12;350:2;401:41;435:6;430:3;425;401:41;;;68:380;;;;;;;;456:347;;570:2;558:9;549:7;545:23;541:32;538:2;;;586:1;583;576:12;538:2;649:1;638:9;634:17;621:31;672:18;664:6;661:30;658:2;;;704:1;701;694:12;658:2;724:63;779:7;770:6;759:9;755:22;724:63;;;714:73;;600:193;532:271;;;;;810:809;;;;978:2;966:9;957:7;953:23;949:32;946:2;;;994:1;991;984:12;946:2;1057:1;1046:9;1042:17;1029:31;1080:18;1072:6;1069:30;1066:2;;;1112:1;1109;1102:12;1066:2;1132:63;1187:7;1178:6;1167:9;1163:22;1132:63;;;1122:73;;1008:193;1260:2;1249:9;1245:18;1232:32;1284:18;1276:6;1273:30;1270:2;;;1316:1;1313;1306:12;1270:2;1336:63;1391:7;1382:6;1371:9;1367:22;1336:63;;;1326:73;;1211:194;1464:2;1453:9;1449:18;1436:32;1488:18;1480:6;1477:30;1474:2;;;1520:1;1517;1510:12;1474:2;1540:63;1595:7;1586:6;1575:9;1571:22;1540:63;;;1530:73;;1415:194;940:679;;;;;;1626:110;1699:31;1724:5;1699:31;;;1694:3;1687:44;1681:55;;;1743:292;;1841:35;1870:5;1841:35;;;1893:6;1888:3;1881:19;1905:63;1961:6;1954:4;1949:3;1945:14;1938:4;1931:5;1927:16;1905:63;;;2000:29;2022:6;2000:29;;;1993:4;1988:3;1984:14;1980:50;1973:57;;1821:214;;;;;;2093:1032;;2224:4;2219:3;2215:14;2310:3;2303:5;2299:15;2293:22;2359:3;2353:4;2349:14;2343:3;2338;2334:13;2327:37;2379:68;2442:4;2429:11;2379:68;;;2371:76;;2244:215;2539:4;2532:5;2528:16;2522:23;2590:3;2584:4;2580:14;2573:4;2568:3;2564:14;2557:38;2610:68;2673:4;2660:11;2610:68;;;2602:76;;2469:221;2774:4;2767:5;2763:16;2757:23;2825:3;2819:4;2815:14;2808:4;2803:3;2799:14;2792:38;2845:68;2908:4;2895:11;2845:68;;;2837:76;;2700:225;3007:4;3000:5;2996:16;2990:23;3025:62;3081:4;3076:3;3072:14;3059:11;3025:62;;;2935:164;3116:4;3109:11;;2197:928;;;;;;3132:321;;3280:2;3269:9;3265:18;3257:26;;3330:9;3324:4;3320:20;3316:1;3305:9;3301:17;3294:47;3355:88;3438:4;3429:6;3355:88;;;3347:96;;3251:202;;;;;3460:256;;3522:2;3516:9;3506:19;;3560:4;3552:6;3548:17;3659:6;3647:10;3644:22;3623:18;3611:10;3608:34;3605:62;3602:2;;;3680:1;3677;3670:12;3602:2;3700:10;3696:2;3689:22;3500:216;;;;;3723:259;;3867:18;3859:6;3856:30;3853:2;;;3899:1;3896;3889:12;3853:2;3943:4;3939:9;3932:4;3924:6;3920:17;3916:33;3908:41;;3972:4;3966;3962:15;3954:23;;3790:192;;;;3989:88;;4066:5;4060:12;4050:22;;4044:33;;;;4084:105;;4153:31;4178:5;4153:31;;;4142:42;;4136:53;;;;4196:128;;4276:42;4269:5;4265:54;4254:65;;4248:76;;;;4332:145;4413:6;4408:3;4403;4390:30;4469:1;4460:6;4455:3;4451:16;4444:27;4383:94;;;;4486:268;4551:1;4558:101;4572:6;4569:1;4566:13;4558:101;;;4648:1;4643:3;4639:11;4633:18;4629:1;4624:3;4620:11;4613:39;4594:2;4591:1;4587:10;4582:15;;4558:101;;;4674:6;4671:1;4668:13;4665:2;;;4739:1;4730:6;4725:3;4721:16;4714:27;4665:2;4535:219;;;;;4762:97;;4850:2;4846:7;4841:2;4834:5;4830:14;4826:28;4816:38;;4810:49;;;",
  "source": "//solium-disable linebreak-style\r\npragma solidity ^0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Customer {\r\n    string name;\r\n    string username;\r\n    string passwordHash;\r\n    address ethAddress;\r\n    int userCount;\r\n\r\n    struct User {\r\n        string name;\r\n        string username;\r\n        string passwordHash;\r\n        address ethAddress;\r\n    }\r\n\r\n    mapping(address => User) Users;\r\n\r\n    function signup(string memory _name, string memory _username, string memory _passwordHash) public { \r\n        User memory newUser;\r\n        newUser.name = _name;\r\n        newUser.username = _username;\r\n        newUser.passwordHash = _passwordHash;\r\n        ethAddress = msg.sender;\r\n        Users[ethAddress] = newUser;\r\n    }\r\n\r\n    function login(string memory _passwordHash) public view returns (User memory) {\r\n        if (keccak256(bytes(_passwordHash)) == keccak256(bytes(Users[msg.sender].passwordHash))) {\r\n            return Users[msg.sender];\r\n        }\r\n        else {}\r\n        \r\n    }\r\n}",
  "sourcePath": "D:/Workspace/ZeppelinServer/contracts/Customer.sol",
  "ast": {
    "absolutePath": "/D/Workspace/ZeppelinServer/contracts/Customer.sol",
    "exportedSymbols": {
      "Customer": [
        99
      ]
    },
    "id": 100,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 99,
        "linearizedBaseContracts": [
          99
        ],
        "name": "Customer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "121:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "121:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "name": "username",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "139:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "139:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "passwordHash",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "161:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "161:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "name": "ethAddress",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "187:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "187:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "name": "userCount",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "212:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 11,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "212:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Customer.User",
            "id": 21,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "257:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 13,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "257:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "username",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "279:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 15,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "279:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "passwordHash",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "305:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "ethAddress",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "335:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 99,
            "src": "234:127:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "Users",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "369:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
              "typeString": "mapping(address => struct Customer.User)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "369:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                "typeString": "mapping(address => struct Customer.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 23,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 21,
                "src": "388:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$21_storage_ptr",
                  "typeString": "struct Customer.User"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "506:228:0",
              "statements": [
                {
                  "assignments": [
                    35
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35,
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 66,
                      "src": "518:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                        "typeString": "struct Customer.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 34,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 21,
                        "src": "518:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_storage_ptr",
                          "typeString": "struct Customer.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "518:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                          "typeString": "struct Customer.User memory"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "548:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "563:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "548:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "548:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "579:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                          "typeString": "struct Customer.User memory"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "username",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "579:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "_username",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "598:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "579:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "579:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "618:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                          "typeString": "struct Customer.User memory"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "passwordHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "618:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "_passwordHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "641:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "618:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "618:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "ethAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "665:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "678:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "678:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "665:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "665:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "Users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "699:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                          "typeString": "mapping(address => struct Customer.User storage ref)"
                        }
                      },
                      "id": 62,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "ethAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "705:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "699:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$21_storage",
                        "typeString": "struct Customer.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "719:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                        "typeString": "struct Customer.User memory"
                      }
                    },
                    "src": "699:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$21_storage",
                      "typeString": "struct Customer.User storage ref"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "699:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "424:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_username",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "445:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_passwordHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "470:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:75:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:0:0"
            },
            "scope": 99,
            "src": "408:326:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "820:185:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 76,
                              "name": "_passwordHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "851:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "845:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 74,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "835:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "835:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 81,
                                  "name": "Users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "886:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                                    "typeString": "mapping(address => struct Customer.User storage ref)"
                                  }
                                },
                                "id": 84,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 82,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "892:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 83,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "892:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "886:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$21_storage",
                                  "typeString": "struct Customer.User storage ref"
                                }
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "passwordHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "886:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "880:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "880:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        ],
                        "id": 79,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "870:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "870:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "835:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "986:2:0",
                    "statements": []
                  },
                  "id": 96,
                  "nodeType": "IfStatement",
                  "src": "831:157:0",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "920:51:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "Users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "942:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                              "typeString": "mapping(address => struct Customer.User storage ref)"
                            }
                          },
                          "id": 92,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "948:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "948:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "942:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$21_storage",
                            "typeString": "struct Customer.User storage ref"
                          }
                        },
                        "functionReturnParameters": 73,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "935:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "login",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "_passwordHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "757:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "756:29:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "807:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                    "typeString": "struct Customer.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 71,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21,
                    "src": "807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$21_storage_ptr",
                      "typeString": "struct Customer.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:13:0"
            },
            "scope": 99,
            "src": "742:263:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 100,
        "src": "96:912:0"
      }
    ],
    "src": "34:974:0"
  },
  "legacyAST": {
    "absolutePath": "/D/Workspace/ZeppelinServer/contracts/Customer.sol",
    "exportedSymbols": {
      "Customer": [
        99
      ]
    },
    "id": 100,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 99,
        "linearizedBaseContracts": [
          99
        ],
        "name": "Customer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "121:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "121:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6,
            "name": "username",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "139:15:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "139:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 8,
            "name": "passwordHash",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "161:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "161:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "name": "ethAddress",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "187:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "187:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "name": "userCount",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "212:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 11,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "212:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "Customer.User",
            "id": 21,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "257:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 13,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "257:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "username",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "279:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 15,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "279:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "passwordHash",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "305:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "305:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "ethAddress",
                "nodeType": "VariableDeclaration",
                "scope": 21,
                "src": "335:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 19,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "335:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 99,
            "src": "234:127:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "Users",
            "nodeType": "VariableDeclaration",
            "scope": 99,
            "src": "369:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
              "typeString": "mapping(address => struct Customer.User)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "369:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                "typeString": "mapping(address => struct Customer.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 23,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 21,
                "src": "388:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$21_storage_ptr",
                  "typeString": "struct Customer.User"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "506:228:0",
              "statements": [
                {
                  "assignments": [
                    35
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35,
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 66,
                      "src": "518:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                        "typeString": "struct Customer.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 34,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 21,
                        "src": "518:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_storage_ptr",
                          "typeString": "struct Customer.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 36,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "518:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "548:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                          "typeString": "struct Customer.User memory"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "548:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "563:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "548:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "548:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 43,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "579:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                          "typeString": "struct Customer.User memory"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "username",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "579:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "_username",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "598:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "579:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "579:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 49,
                        "name": "newUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "618:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                          "typeString": "struct Customer.User memory"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "passwordHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "618:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 52,
                      "name": "_passwordHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "641:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "618:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "618:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "ethAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "665:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "678:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "678:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "665:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "665:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "Users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "699:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                          "typeString": "mapping(address => struct Customer.User storage ref)"
                        }
                      },
                      "id": 62,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "ethAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "705:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "699:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$21_storage",
                        "typeString": "struct Customer.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 63,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "719:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                        "typeString": "struct Customer.User memory"
                      }
                    },
                    "src": "699:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$21_storage",
                      "typeString": "struct Customer.User storage ref"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "699:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "signup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "424:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_username",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "445:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_passwordHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "470:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "423:75:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:0:0"
            },
            "scope": 99,
            "src": "408:326:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "820:185:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 76,
                              "name": "_passwordHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "851:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "845:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "845:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 74,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "835:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "835:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 81,
                                  "name": "Users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "886:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                                    "typeString": "mapping(address => struct Customer.User storage ref)"
                                  }
                                },
                                "id": 84,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 82,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "892:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 83,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "892:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "886:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$21_storage",
                                  "typeString": "struct Customer.User storage ref"
                                }
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "passwordHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "886:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "880:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": "bytes"
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "880:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        ],
                        "id": 79,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "870:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "870:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "835:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 95,
                    "nodeType": "Block",
                    "src": "986:2:0",
                    "statements": []
                  },
                  "id": 96,
                  "nodeType": "IfStatement",
                  "src": "831:157:0",
                  "trueBody": {
                    "id": 94,
                    "nodeType": "Block",
                    "src": "920:51:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 89,
                            "name": "Users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "942:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$21_storage_$",
                              "typeString": "mapping(address => struct Customer.User storage ref)"
                            }
                          },
                          "id": 92,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "948:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "948:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "942:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$21_storage",
                            "typeString": "struct Customer.User storage ref"
                          }
                        },
                        "functionReturnParameters": 73,
                        "id": 93,
                        "nodeType": "Return",
                        "src": "935:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "login",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "name": "_passwordHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "757:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "756:29:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "807:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$21_memory_ptr",
                    "typeString": "struct Customer.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 71,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 21,
                    "src": "807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$21_storage_ptr",
                      "typeString": "struct Customer.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "806:13:0"
            },
            "scope": 99,
            "src": "742:263:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 100,
        "src": "96:912:0"
      }
    ],
    "src": "34:974:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xAe1D07C0C3428864510c8a83f159dEd1664DcaCF",
      "transactionHash": "0x76e6db16ea8e41fc61369aa9897d5c4092ad73952587509618f7b92f5360861a"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-19T06:18:17.845Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}